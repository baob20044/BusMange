<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnViewDetail.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AeFtOZ6pcoklAAAAAElFTkSuQmCC
</value>
  </data>
</root>